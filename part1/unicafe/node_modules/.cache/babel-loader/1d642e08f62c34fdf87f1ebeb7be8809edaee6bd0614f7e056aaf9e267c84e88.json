{"ast":null,"code":"var _jsxFileName = \"/Users/nina/FSO/part1/unicafe/src/App.js\",\n  _s = $RefreshSig$();\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Button = _ref => {\n  let {\n    handleClick,\n    text\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    onClick: handleClick,\n    children: text\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 3,\n    columnNumber: 41\n  }, this);\n};\n_c = Button;\nconst Statistics = _ref2 => {\n  let {\n    good,\n    neutral,\n    bad\n  } = _ref2;\n  if ({\n    good\n  } + {\n    bad\n  } + {\n    neutral\n  } === 0) {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: \"waiting for review\"\n    }, void 0, false);\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"good \", good]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"neutral \", neutral]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"bad \", bad]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"all \", good + neutral + bad]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"average \", (good + 0 + bad * -1) / (good + neutral + bad)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_c2 = Statistics;\nconst App = () => {\n  _s();\n  // save clicks of each button to its own state\n  const [good, setGood] = useState(0);\n  const [neutral, setNeutral] = useState(0);\n  const [bad, setBad] = useState(0);\n  const handleGood = () => setGood(good + 1);\n  const handleNeutral = () => setNeutral(neutral + 1);\n  const handleBad = () => setBad(bad + 1);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"give feedback\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      handleClick: handleGood,\n      text: \"good\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      handleClick: handleNeutral,\n      text: \"neutral\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      handleClick: handleBad,\n      text: \"bad\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"statistics\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"good \", good]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"neutral \", neutral]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"bad \", bad]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"all \", good + neutral + bad]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"average \", (good + 0 + bad * -1) / (good + neutral + bad)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"eScCFcZxMV7EVTyq8/QmtvFilbs=\");\n_c3 = App;\nexport default App;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"Button\");\n$RefreshReg$(_c2, \"Statistics\");\n$RefreshReg$(_c3, \"App\");","map":{"version":3,"names":["useState","Button","handleClick","text","Statistics","good","neutral","bad","App","setGood","setNeutral","setBad","handleGood","handleNeutral","handleBad"],"sources":["/Users/nina/FSO/part1/unicafe/src/App.js"],"sourcesContent":["import { useState } from 'react'\n\nconst Button = ({handleClick, text}) => <button onClick={handleClick}>{text}</button>\n\nconst Statistics = ({good, neutral,bad}) => {\n  if ({good} + {bad} + {neutral} === 0) {\n    return (\n      <>waiting for review</>\n    )\n  }\n  return (\n    <>\n      <div>good {good}</div>\n      <div>neutral {neutral}</div>\n      <div>bad {bad}</div>\n      <div>all {good + neutral + bad}</div>\n      <div>average {(good + 0 + (bad * -1)) / (good + neutral + bad)}</div>\n    </>\n  )\n}\n\nconst App = () => {\n  // save clicks of each button to its own state\n  const [good, setGood] = useState(0)\n  const [neutral, setNeutral] = useState(0)\n  const [bad, setBad] = useState(0)\n\n  const handleGood = () => setGood(good + 1)\n  const handleNeutral = () => setNeutral(neutral + 1)\n  const handleBad = () => setBad(bad + 1)\n\n  return (\n    <div>\n      <h1>give feedback</h1>\n      <Button handleClick={handleGood} text={\"good\"}></Button>\n      <Button handleClick={handleNeutral} text={\"neutral\"}></Button>\n      <Button handleClick={handleBad} text={\"bad\"}></Button>\n      <h2>statistics</h2>\n      <div>good {good}</div>\n      <div>neutral {neutral}</div>\n      <div>bad {bad}</div>\n      <div>all {good + neutral + bad}</div>\n      <div>average {(good + 0 + (bad * -1)) / (good + neutral + bad)}</div>\n    </div>\n  )\n}\n\nexport default App"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}