{"ast":null,"code":"var _jsxFileName = \"/Users/nina/FSO/part1/unicafe/src/App.js\",\n  _s = $RefreshSig$();\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Button = _ref => {\n  let {\n    handleClick,\n    text\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    onClick: handleClick,\n    children: text\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 3,\n    columnNumber: 41\n  }, this);\n};\n_c = Button;\nconst Statistics = _ref2 => {\n  let {\n    good,\n    neutral,\n    bad\n  } = _ref2;\n  if (good + neutral + bad === 0) {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"statistics\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 9,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"no response yet\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 10,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true);\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"statistics\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      children: /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n          children: /*#__PURE__*/_jsxDEV(StatisticLine, {\n            text: \"good\",\n            value: good\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 20,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: /*#__PURE__*/_jsxDEV(StatisticLine, {\n            text: \"neutral\",\n            value: neutral\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 23,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: /*#__PURE__*/_jsxDEV(StatisticLine, {\n            text: \"bad\",\n            value: bad\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 26,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: /*#__PURE__*/_jsxDEV(StatisticLine, {\n            text: \"all\",\n            value: good + neutral + bad\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 29,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: /*#__PURE__*/_jsxDEV(StatisticLine, {\n            text: \"average\",\n            value: (good + 0 + bad * -1) / (good + neutral + bad)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: /*#__PURE__*/_jsxDEV(StatisticLine, {\n            text: \"positive\",\n            value: good / (good + neutral + bad) * 100\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_c2 = Statistics;\nconst StatisticLine = _ref3 => {\n  let {\n    text,\n    value\n  } = _ref3;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"td\", {\n      children: text\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n      children: value\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_c3 = StatisticLine;\nconst App = () => {\n  _s();\n  // save clicks of each button to its own state\n  const [good, setGood] = useState(0);\n  const [neutral, setNeutral] = useState(0);\n  const [bad, setBad] = useState(0);\n  const handleGood = () => setGood(good + 1);\n  const handleNeutral = () => setNeutral(neutral + 1);\n  const handleBad = () => setBad(bad + 1);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"give feedback\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      handleClick: handleGood,\n      text: \"good\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      handleClick: handleNeutral,\n      text: \"neutral\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      handleClick: handleBad,\n      text: \"bad\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Statistics, {\n      good: good,\n      bad: bad,\n      neutral: neutral\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"eScCFcZxMV7EVTyq8/QmtvFilbs=\");\n_c4 = App;\nexport default App;\nvar _c, _c2, _c3, _c4;\n$RefreshReg$(_c, \"Button\");\n$RefreshReg$(_c2, \"Statistics\");\n$RefreshReg$(_c3, \"StatisticLine\");\n$RefreshReg$(_c4, \"App\");","map":{"version":3,"names":["useState","Button","handleClick","text","Statistics","good","neutral","bad","StatisticLine","value","App","setGood","setNeutral","setBad","handleGood","handleNeutral","handleBad"],"sources":["/Users/nina/FSO/part1/unicafe/src/App.js"],"sourcesContent":["import { useState } from 'react'\n\nconst Button = ({handleClick, text}) => <button onClick={handleClick}>{text}</button>\n\nconst Statistics = ({good, neutral, bad}) => {\n  if (good + neutral + bad === 0) {\n    return (\n      <>\n        <h2>statistics</h2>\n        <div>no response yet</div>\n      </>\n    )\n  }\n  return (\n    <>\n      <h2>statistics</h2>\n      <table>\n        <tbody>\n          <tr>\n            <StatisticLine text={\"good\"} value={good}></StatisticLine>\n          </tr>\n          <tr>\n            <StatisticLine text={\"neutral\"} value={neutral}></StatisticLine>\n          </tr>\n          <tr>\n            <StatisticLine text={\"bad\"} value={bad}></StatisticLine>\n          </tr>\n          <tr>\n            <StatisticLine text={\"all\"} value={good + neutral + bad}></StatisticLine>\n          </tr>\n          <tr>\n            <StatisticLine text={\"average\"} value={(good + 0 + (bad * -1)) / (good + neutral + bad)}></StatisticLine>\n          </tr>\n          <tr>\n            <StatisticLine text={\"positive\"} value={good / (good + neutral + bad) * 100}></StatisticLine>\n          </tr>\n        </tbody>\n      </table>\n    </>\n  )\n}\n\nconst StatisticLine = ({text, value}) => {\n  return (\n    <>\n      <td>{text}</td>\n      <td>{value}</td>\n    </>\n  )\n}\n\nconst App = () => {\n  // save clicks of each button to its own state\n  const [good, setGood] = useState(0)\n  const [neutral, setNeutral] = useState(0)\n  const [bad, setBad] = useState(0)\n\n  const handleGood = () => setGood(good + 1)\n  const handleNeutral = () => setNeutral(neutral + 1)\n  const handleBad = () => setBad(bad + 1)\n\n  return (\n    <div>\n      <h1>give feedback</h1>\n      <Button handleClick={handleGood} text={\"good\"}></Button>\n      <Button handleClick={handleNeutral} text={\"neutral\"}></Button>\n      <Button handleClick={handleBad} text={\"bad\"}></Button>\n      <Statistics good={good} bad={bad} neutral={neutral} />\n    </div>\n  )\n}\n\nexport default App"],"mappings":";;AAAA,SAASA,QAAQ,QAAQ,OAAO;AAAA;AAAA;AAEhC,MAAMC,MAAM,GAAG;EAAA,IAAC;IAACC,WAAW;IAAEC;EAAI,CAAC;EAAA,oBAAK;IAAQ,OAAO,EAAED,WAAY;IAAA,UAAEC;EAAI;IAAA;IAAA;IAAA;EAAA,QAAU;AAAA;AAAA,KAA/EF,MAAM;AAEZ,MAAMG,UAAU,GAAG,SAA0B;EAAA,IAAzB;IAACC,IAAI;IAAEC,OAAO;IAAEC;EAAG,CAAC;EACtC,IAAIF,IAAI,GAAGC,OAAO,GAAGC,GAAG,KAAK,CAAC,EAAE;IAC9B,oBACE;MAAA,wBACE;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAAmB,eACnB;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAA0B;IAAA,gBACzB;EAEP;EACA,oBACE;IAAA,wBACE;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAAmB,eACnB;MAAA,uBACE;QAAA,wBACE;UAAA,uBACE,QAAC,aAAa;YAAC,IAAI,EAAE,MAAO;YAAC,KAAK,EAAEF;UAAK;YAAA;YAAA;YAAA;UAAA;QAAiB;UAAA;UAAA;UAAA;QAAA,QACvD,eACL;UAAA,uBACE,QAAC,aAAa;YAAC,IAAI,EAAE,SAAU;YAAC,KAAK,EAAEC;UAAQ;YAAA;YAAA;YAAA;UAAA;QAAiB;UAAA;UAAA;UAAA;QAAA,QAC7D,eACL;UAAA,uBACE,QAAC,aAAa;YAAC,IAAI,EAAE,KAAM;YAAC,KAAK,EAAEC;UAAI;YAAA;YAAA;YAAA;UAAA;QAAiB;UAAA;UAAA;UAAA;QAAA,QACrD,eACL;UAAA,uBACE,QAAC,aAAa;YAAC,IAAI,EAAE,KAAM;YAAC,KAAK,EAAEF,IAAI,GAAGC,OAAO,GAAGC;UAAI;YAAA;YAAA;YAAA;UAAA;QAAiB;UAAA;UAAA;UAAA;QAAA,QACtE,eACL;UAAA,uBACE,QAAC,aAAa;YAAC,IAAI,EAAE,SAAU;YAAC,KAAK,EAAE,CAACF,IAAI,GAAG,CAAC,GAAIE,GAAG,GAAG,CAAC,CAAE,KAAKF,IAAI,GAAGC,OAAO,GAAGC,GAAG;UAAE;YAAA;YAAA;YAAA;UAAA;QAAiB;UAAA;UAAA;UAAA;QAAA,QACtG,eACL;UAAA,uBACE,QAAC,aAAa;YAAC,IAAI,EAAE,UAAW;YAAC,KAAK,EAAEF,IAAI,IAAIA,IAAI,GAAGC,OAAO,GAAGC,GAAG,CAAC,GAAG;UAAI;YAAA;YAAA;YAAA;UAAA;QAAiB;UAAA;UAAA;UAAA;QAAA,QAC1F;MAAA;QAAA;QAAA;QAAA;MAAA;IACC;MAAA;MAAA;MAAA;IAAA,QACF;EAAA,gBACP;AAEP,CAAC;AAAA,MApCKH,UAAU;AAsChB,MAAMI,aAAa,GAAG,SAAmB;EAAA,IAAlB;IAACL,IAAI;IAAEM;EAAK,CAAC;EAClC,oBACE;IAAA,wBACE;MAAA,UAAKN;IAAI;MAAA;MAAA;MAAA;IAAA,QAAM,eACf;MAAA,UAAKM;IAAK;MAAA;MAAA;MAAA;IAAA,QAAM;EAAA,gBACf;AAEP,CAAC;AAAA,MAPKD,aAAa;AASnB,MAAME,GAAG,GAAG,MAAM;EAAA;EAChB;EACA,MAAM,CAACL,IAAI,EAAEM,OAAO,CAAC,GAAGX,QAAQ,CAAC,CAAC,CAAC;EACnC,MAAM,CAACM,OAAO,EAAEM,UAAU,CAAC,GAAGZ,QAAQ,CAAC,CAAC,CAAC;EACzC,MAAM,CAACO,GAAG,EAAEM,MAAM,CAAC,GAAGb,QAAQ,CAAC,CAAC,CAAC;EAEjC,MAAMc,UAAU,GAAG,MAAMH,OAAO,CAACN,IAAI,GAAG,CAAC,CAAC;EAC1C,MAAMU,aAAa,GAAG,MAAMH,UAAU,CAACN,OAAO,GAAG,CAAC,CAAC;EACnD,MAAMU,SAAS,GAAG,MAAMH,MAAM,CAACN,GAAG,GAAG,CAAC,CAAC;EAEvC,oBACE;IAAA,wBACE;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAAsB,eACtB,QAAC,MAAM;MAAC,WAAW,EAAEO,UAAW;MAAC,IAAI,EAAE;IAAO;MAAA;MAAA;MAAA;IAAA,QAAU,eACxD,QAAC,MAAM;MAAC,WAAW,EAAEC,aAAc;MAAC,IAAI,EAAE;IAAU;MAAA;MAAA;MAAA;IAAA,QAAU,eAC9D,QAAC,MAAM;MAAC,WAAW,EAAEC,SAAU;MAAC,IAAI,EAAE;IAAM;MAAA;MAAA;MAAA;IAAA,QAAU,eACtD,QAAC,UAAU;MAAC,IAAI,EAAEX,IAAK;MAAC,GAAG,EAAEE,GAAI;MAAC,OAAO,EAAED;IAAQ;MAAA;MAAA;MAAA;IAAA,QAAG;EAAA;IAAA;IAAA;IAAA;EAAA,QAClD;AAEV,CAAC;AAAA,GAnBKI,GAAG;AAAA,MAAHA,GAAG;AAqBT,eAAeA,GAAG;AAAA;AAAA;AAAA;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}