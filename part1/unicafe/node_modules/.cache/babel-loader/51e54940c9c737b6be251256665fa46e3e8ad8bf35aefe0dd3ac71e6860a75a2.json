{"ast":null,"code":"var _jsxFileName = \"/Users/nina/FSO/part1/unicafe/src/App.js\",\n  _s = $RefreshSig$();\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Button = _ref => {\n  let {\n    handleClick,\n    text\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    onClick: handleClick,\n    children: text\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 3,\n    columnNumber: 41\n  }, this);\n};\n_c = Button;\nconst Statistics = _ref2 => {\n  let {\n    good\n  } = _ref2;\n  if ({\n    good\n  } === 0) {\n    return /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"waiting for review\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 7\n    }, this);\n  }\n  // return (\n  //   <>\n  //     <h2>statistics</h2>\n  //     <div>good {good}</div>\n  //     <div>neutral {neutral}</div>\n  //     <div>bad {bad}</div>\n  //     <div>all {good + neutral + bad}</div>\n  //     <div>average {(good + 0 + (bad * -1)) / (good + neutral + bad)}</div>\n  //   </>\n  // )\n};\n_c2 = Statistics;\nconst App = () => {\n  _s();\n  // save clicks of each button to its own state\n  const [good, setGood] = useState(0);\n  const [neutral, setNeutral] = useState(0);\n  const [bad, setBad] = useState(0);\n  const handleGood = () => setGood(good + 1);\n  const handleNeutral = () => setNeutral(neutral + 1);\n  const handleBad = () => setBad(bad + 1);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"give feedback\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      handleClick: handleGood,\n      text: \"good\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      handleClick: handleNeutral,\n      text: \"neutral\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      handleClick: handleBad,\n      text: \"bad\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Statistics, {\n      good: good,\n      bad: bad,\n      neutral: neutral\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"eScCFcZxMV7EVTyq8/QmtvFilbs=\");\n_c3 = App;\nexport default App;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"Button\");\n$RefreshReg$(_c2, \"Statistics\");\n$RefreshReg$(_c3, \"App\");","map":{"version":3,"names":["useState","Button","handleClick","text","Statistics","good","App","setGood","neutral","setNeutral","bad","setBad","handleGood","handleNeutral","handleBad"],"sources":["/Users/nina/FSO/part1/unicafe/src/App.js"],"sourcesContent":["import { useState } from 'react'\n\nconst Button = ({handleClick, text}) => <button onClick={handleClick}>{text}</button>\n\nconst Statistics = ({good}) => {\n  if ({good} === 0) {\n    return (\n      <h2>waiting for review</h2>\n    )\n  }\n  // return (\n  //   <>\n  //     <h2>statistics</h2>\n  //     <div>good {good}</div>\n  //     <div>neutral {neutral}</div>\n  //     <div>bad {bad}</div>\n  //     <div>all {good + neutral + bad}</div>\n  //     <div>average {(good + 0 + (bad * -1)) / (good + neutral + bad)}</div>\n  //   </>\n  // )\n}\n\nconst App = () => {\n  // save clicks of each button to its own state\n  const [good, setGood] = useState(0)\n  const [neutral, setNeutral] = useState(0)\n  const [bad, setBad] = useState(0)\n\n  const handleGood = () => setGood(good + 1)\n  const handleNeutral = () => setNeutral(neutral + 1)\n  const handleBad = () => setBad(bad + 1)\n\n  return (\n    <div>\n      <h1>give feedback</h1>\n      <Button handleClick={handleGood} text={\"good\"}></Button>\n      <Button handleClick={handleNeutral} text={\"neutral\"}></Button>\n      <Button handleClick={handleBad} text={\"bad\"}></Button>\n      <Statistics good={good} bad={bad} neutral={neutral} />\n    </div>\n  )\n}\n\nexport default App"],"mappings":";;AAAA,SAASA,QAAQ,QAAQ,OAAO;AAAA;AAEhC,MAAMC,MAAM,GAAG;EAAA,IAAC;IAACC,WAAW;IAAEC;EAAI,CAAC;EAAA,oBAAK;IAAQ,OAAO,EAAED,WAAY;IAAA,UAAEC;EAAI;IAAA;IAAA;IAAA;EAAA,QAAU;AAAA;AAAA,KAA/EF,MAAM;AAEZ,MAAMG,UAAU,GAAG,SAAY;EAAA,IAAX;IAACC;EAAI,CAAC;EACxB,IAAI;IAACA;EAAI,CAAC,KAAK,CAAC,EAAE;IAChB,oBACE;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAA2B;EAE/B;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;AACF,CAAC;AAAA,MAhBKD,UAAU;AAkBhB,MAAME,GAAG,GAAG,MAAM;EAAA;EAChB;EACA,MAAM,CAACD,IAAI,EAAEE,OAAO,CAAC,GAAGP,QAAQ,CAAC,CAAC,CAAC;EACnC,MAAM,CAACQ,OAAO,EAAEC,UAAU,CAAC,GAAGT,QAAQ,CAAC,CAAC,CAAC;EACzC,MAAM,CAACU,GAAG,EAAEC,MAAM,CAAC,GAAGX,QAAQ,CAAC,CAAC,CAAC;EAEjC,MAAMY,UAAU,GAAG,MAAML,OAAO,CAACF,IAAI,GAAG,CAAC,CAAC;EAC1C,MAAMQ,aAAa,GAAG,MAAMJ,UAAU,CAACD,OAAO,GAAG,CAAC,CAAC;EACnD,MAAMM,SAAS,GAAG,MAAMH,MAAM,CAACD,GAAG,GAAG,CAAC,CAAC;EAEvC,oBACE;IAAA,wBACE;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAAsB,eACtB,QAAC,MAAM;MAAC,WAAW,EAAEE,UAAW;MAAC,IAAI,EAAE;IAAO;MAAA;MAAA;MAAA;IAAA,QAAU,eACxD,QAAC,MAAM;MAAC,WAAW,EAAEC,aAAc;MAAC,IAAI,EAAE;IAAU;MAAA;MAAA;MAAA;IAAA,QAAU,eAC9D,QAAC,MAAM;MAAC,WAAW,EAAEC,SAAU;MAAC,IAAI,EAAE;IAAM;MAAA;MAAA;MAAA;IAAA,QAAU,eACtD,QAAC,UAAU;MAAC,IAAI,EAAET,IAAK;MAAC,GAAG,EAAEK,GAAI;MAAC,OAAO,EAAEF;IAAQ;MAAA;MAAA;MAAA;IAAA,QAAG;EAAA;IAAA;IAAA;IAAA;EAAA,QAClD;AAEV,CAAC;AAAA,GAnBKF,GAAG;AAAA,MAAHA,GAAG;AAqBT,eAAeA,GAAG;AAAA;AAAA;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}